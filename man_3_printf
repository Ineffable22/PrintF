PRINTF

DESCRIPTION

	The functions in the printf() family produce output according to a format as described below. 

Length modifier
	h		  A following integer conversion corresponds to a short or
              unsigned short argument, or a following n conversion
              corresponds to a pointer to a short argument.
	
	l		  (ell) A following integer conversion corresponds to a long
              or unsigned long argument, or a following n conversion
              corresponds to a pointer to a long argument, or a
              following c conversion corresponds to a wint_t argument,
              or a following s conversion corresponds to a pointer to
              wchar_t argument.

Conversion specifiers
	d, i		  The int argument is converted to signed decimal notation.
              The precision, if any, gives the minimum number of digits
              that must appear; if the converted value requires fewer
              digits, it is padded on the left with zeros.  The default
              precision is 1.  When 0 is printed with an explicit
              precision 0, the output is empty.

	o, u, x, X
              The unsigned int argument is converted to unsigned octal
              (o), unsigned decimal (u), or unsigned hexadecimal (x and
              X) notation.  The letters abcdef are used for x
              conversions; the letters ABCDEF are used for X
              conversions.  The precision, if any, gives the minimum
              number of digits that must appear; if the converted value
              requires fewer digits, it is padded on the left with
              zeros.  The default precision is 1.  When 0 is printed
              with an explicit precision 0, the output is empty.

	s		  If no l modifier is present: the const char * argument is
              expected to be a pointer to an array of character type
              (pointer to a string).  Characters from the array are
              written up to (but not including) a terminating null byte
              ('\0'); if a precision is specified, no more than the
              number specified are written.  If a precision is given, no
              null byte need be present; if the precision is not
              specified, or is greater than the size of the array, the
              array must contain a terminating null byte.

	C		  (Not in C99 or C11, but in SUSv2, SUSv3, and SUSv4.)
              Synonym for lc.  Don't use.

	S		  (Not in C99 or C11, but in SUSv2, SUSv3, and SUSv4.)
              Synonym for ls.  Don't use.

	%		  A '%' is written.  No argument is converted.  The complete
              conversion specification is '%%'.

RETURN VALUE
       Upon successful return, these functions return the number of
       characters printed (excluding the null byte used to end output to
       strings).
